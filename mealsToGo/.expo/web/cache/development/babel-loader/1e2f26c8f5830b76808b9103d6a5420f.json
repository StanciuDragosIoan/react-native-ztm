{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React from \"react\";\nimport styled, { useTheme } from \"styled-components/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar sizeVariant = {\n  small: 1,\n  medium: 2,\n  large: 3\n};\nvar positionVariant = {\n  top: \"marginTop\",\n  left: \"marginLeft\",\n  right: \"marginRight\",\n  bottom: \"marginBottom\"\n};\n\nvar getVariant = function getVariant(position, size, theme) {\n  var sizeIndex = sizeVariant[size];\n  var property = positionVariant[position];\n  var value = theme.space[sizeIndex];\n  var LeftMedium = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    margin-left: \", \";\\n  \"])), function (props) {\n    return props.theme.space[2];\n  });\n  return property + \":\" + value;\n};\n\nvar SpacerView = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  \", \";\\n\"])), function (_ref) {\n  var variant = _ref.variant;\n  return variant;\n});\nexport var Spacer = function Spacer(_ref2) {\n  var position = _ref2.position,\n      size = _ref2.size,\n      children = _ref2.children;\n  var theme = useTheme();\n  var variant = getVariant(position, size, theme);\n  return _jsx(SpacerView, {\n    variant: variant,\n    children: children\n  });\n};\nSpacer.defaultProps = {\n  position: \"top\",\n  size: \"small\"\n};","map":{"version":3,"sources":["/home/amaimon/work/udemy_courses/react_native_ztm/mealsToGo/src/components/spacer/spacer.component.js"],"names":["React","styled","useTheme","sizeVariant","small","medium","large","positionVariant","top","left","right","bottom","getVariant","position","size","theme","sizeIndex","property","value","space","LeftMedium","View","props","SpacerView","variant","Spacer","children","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,0BAAjC;;AACA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CADW;AAElBC,EAAAA,MAAM,EAAE,CAFU;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAApB;AAMA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,GAAG,EAAE,WADiB;AAEtBC,EAAAA,IAAI,EAAE,YAFgB;AAGtBC,EAAAA,KAAK,EAAE,aAHe;AAItBC,EAAAA,MAAM,EAAE;AAJc,CAAxB;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAWC,IAAX,EAAiBC,KAAjB,EAA2B;AAC5C,MAAMC,SAAS,GAAGb,WAAW,CAACW,IAAD,CAA7B;AACA,MAAMG,QAAQ,GAAGV,eAAe,CAACM,QAAD,CAAhC;AACA,MAAMK,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAYH,SAAZ,CAAd;AAEA,MAAMI,UAAU,GAAGnB,MAAM,CAACoB,IAAV,uGACC,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACP,KAAN,CAAYI,KAAZ,CAAkB,CAAlB,CAAX;AAAA,GADD,CAAhB;AAGA,SAAUF,QAAV,SAAsBC,KAAtB;AACD,CATD;;AAWA,IAAMK,UAAU,GAAGtB,MAAM,CAACoB,IAAV,wFACZ;AAAA,MAAGG,OAAH,QAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CADY,CAAhB;AAIA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,QAAkC;AAAA,MAA/BZ,QAA+B,SAA/BA,QAA+B;AAAA,MAArBC,IAAqB,SAArBA,IAAqB;AAAA,MAAfY,QAAe,SAAfA,QAAe;AACtD,MAAMX,KAAK,GAAGb,QAAQ,EAAtB;AAEA,MAAMsB,OAAO,GAAGZ,UAAU,CAACC,QAAD,EAAWC,IAAX,EAAiBC,KAAjB,CAA1B;AACA,SAAO,KAAC,UAAD;AAAY,IAAA,OAAO,EAAES,OAArB;AAAA,cAA+BE;AAA/B,IAAP;AACD,CALM;AAOPD,MAAM,CAACE,YAAP,GAAsB;AACpBd,EAAAA,QAAQ,EAAE,KADU;AAEpBC,EAAAA,IAAI,EAAE;AAFc,CAAtB","sourcesContent":["import React from \"react\";\nimport styled, { useTheme } from \"styled-components/native\";\nconst sizeVariant = {\n  small: 1,\n  medium: 2,\n  large: 3,\n};\n\nconst positionVariant = {\n  top: \"marginTop\",\n  left: \"marginLeft\",\n  right: \"marginRight\",\n  bottom: \"marginBottom\",\n};\n\nconst getVariant = (position, size, theme) => {\n  const sizeIndex = sizeVariant[size];\n  const property = positionVariant[position];\n  const value = theme.space[sizeIndex];\n\n  const LeftMedium = styled.View`\n    margin-left: ${(props) => props.theme.space[2]};\n  `;\n  return `${property}:${value}`;\n};\n\nconst SpacerView = styled.View`\n  ${({ variant }) => variant};\n`;\n\nexport const Spacer = ({ position, size, children }) => {\n  const theme = useTheme();\n  // calculate variant ahead of time\n  const variant = getVariant(position, size, theme);\n  return <SpacerView variant={variant}>{children}</SpacerView>;\n};\n\nSpacer.defaultProps = {\n  position: \"top\",\n  size: \"small\",\n};\n"]},"metadata":{},"sourceType":"module"}