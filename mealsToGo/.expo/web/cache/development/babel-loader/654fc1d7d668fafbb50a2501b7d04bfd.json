{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar as ExpoStatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurants.screen\";\nimport { theme } from \"./src/infrastructure/theme\";\nimport { SafeArea } from \"./src/components/utility/safe-area.component\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useFonts as useOswald, Oswald_400Regular } from \"@expo-google-fonts/oswald\";\nimport { useFonts as useLato, Lato_400Regular } from \"@expo-google-fonts/lato\";\nimport { RestaurantsContextProvider } from \"./src/services/restaurants/restaurants.context\";\nimport { LocationContextProvider } from \"./src/services/location/location.context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar TAB_ICON = {\n  Restaurants: \"md-restaurant\",\n  Map: \"md-map\",\n  Settings: \"md-settings\"\n};\n\nvar createScreenOptions = function createScreenOptions(_ref) {\n  var route = _ref.route;\n  var iconName = TAB_ICON[route.name];\n  return {\n    tabBarIcon: function tabBarIcon(_ref2) {\n      var size = _ref2.size,\n          color = _ref2.color;\n      return _jsx(Ionicons, {\n        name: iconName,\n        size: size,\n        color: color\n      });\n    }\n  };\n};\n\nvar SettingsScreen = function SettingsScreen() {\n  return _jsx(SafeArea, {\n    children: _jsx(Text, {\n      children: \"Settings\"\n    })\n  });\n};\n\nvar MapScreen = function MapScreen() {\n  return _jsx(SafeArea, {\n    children: _jsx(Text, {\n      children: \"Map\"\n    })\n  });\n};\n\nexport default function App() {\n  var _useOswald = useOswald({\n    Oswald_400Regular: Oswald_400Regular\n  }),\n      _useOswald2 = _slicedToArray(_useOswald, 1),\n      oswaldLoaded = _useOswald2[0];\n\n  var _useLato = useLato({\n    Lato_400Regular: Lato_400Regular\n  }),\n      _useLato2 = _slicedToArray(_useLato, 1),\n      latoLoaded = _useLato2[0];\n\n  if (!oswaldLoaded || !latoLoaded) {\n    return null;\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(ThemeProvider, {\n      theme: theme,\n      children: _jsx(LocationContextProvider, {\n        children: _jsx(RestaurantsContextProvider, {\n          children: _jsx(NavigationContainer, {\n            children: _jsxs(Tab.Navigator, {\n              screenOptions: createScreenOptions,\n              children: [_jsx(Tab.Screen, {\n                name: \"Restaurants\",\n                component: RestaurantsScreen\n              }), _jsx(Tab.Screen, {\n                name: \"Settings\",\n                component: SettingsScreen\n              }), _jsx(Tab.Screen, {\n                name: \"Map\",\n                component: MapScreen\n              })]\n            })\n          })\n        })\n      })\n    }), _jsx(ExpoStatusBar, {\n      style: \"auto\"\n    })]\n  });\n}","map":{"version":3,"sources":["/home/amaimon/work/udemy_courses/react_native_ztm/mealsToGo/App.js"],"names":["StatusBar","ExpoStatusBar","React","NavigationContainer","createBottomTabNavigator","ThemeProvider","RestaurantsScreen","theme","SafeArea","Ionicons","useFonts","useOswald","Oswald_400Regular","useLato","Lato_400Regular","RestaurantsContextProvider","LocationContextProvider","Tab","TAB_ICON","Restaurants","Map","Settings","createScreenOptions","route","iconName","name","tabBarIcon","size","color","SettingsScreen","MapScreen","App","oswaldLoaded","latoLoaded"],"mappings":";AAAA,SAASA,SAAS,IAAIC,aAAtB,QAA2C,iBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,iBAAT;AACA,SAASC,KAAT;AACA,SAASC,QAAT;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SACEC,QAAQ,IAAIC,SADd,EAEEC,iBAFF,QAGO,2BAHP;AAIA,SAASF,QAAQ,IAAIG,OAArB,EAA8BC,eAA9B,QAAqD,yBAArD;AACA,SAASC,0BAAT;AACA,SAASC,uBAAT;;;;AAEA,IAAMC,GAAG,GAAGb,wBAAwB,EAApC;AAEA,IAAMc,QAAQ,GAAG;AACfC,EAAAA,WAAW,EAAE,eADE;AAEfC,EAAAA,GAAG,EAAE,QAFU;AAGfC,EAAAA,QAAQ,EAAE;AAHK,CAAjB;;AAMA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACzC,MAAMC,QAAQ,GAAGN,QAAQ,CAACK,KAAK,CAACE,IAAP,CAAzB;AACA,SAAO;AACLC,IAAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,UAASC,KAAT,SAASA,KAAT;AAAA,aACV,KAAC,QAAD;AAAU,QAAA,IAAI,EAAEJ,QAAhB;AAA0B,QAAA,IAAI,EAAEG,IAAhC;AAAsC,QAAA,KAAK,EAAEC;AAA7C,QADU;AAAA;AADP,GAAP;AAKD,CAPD;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SACrB,KAAC,QAAD;AAAA,cACE,KAAC,IAAD;AAAA;AAAA;AADF,IADqB;AAAA,CAAvB;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAChB,KAAC,QAAD;AAAA,cACE,KAAC,IAAD;AAAA;AAAA;AADF,IADgB;AAAA,CAAlB;;AAMA,eAAe,SAASC,GAAT,GAAe;AAC5B,mBAAuBpB,SAAS,CAAC;AAC/BC,IAAAA,iBAAiB,EAAjBA;AAD+B,GAAD,CAAhC;AAAA;AAAA,MAAOoB,YAAP;;AAIA,iBAAqBnB,OAAO,CAAC;AAC3BC,IAAAA,eAAe,EAAfA;AAD2B,GAAD,CAA5B;AAAA;AAAA,MAAOmB,UAAP;;AAIA,MAAI,CAACD,YAAD,IAAiB,CAACC,UAAtB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,SACE;AAAA,eACE,KAAC,aAAD;AAAe,MAAA,KAAK,EAAE1B,KAAtB;AAAA,gBACE,KAAC,uBAAD;AAAA,kBACE,KAAC,0BAAD;AAAA,oBACE,KAAC,mBAAD;AAAA,sBACE,MAAC,GAAD,CAAK,SAAL;AAAe,cAAA,aAAa,EAAEe,mBAA9B;AAAA,yBACE,KAAC,GAAD,CAAK,MAAL;AAAY,gBAAA,IAAI,EAAC,aAAjB;AAA+B,gBAAA,SAAS,EAAEhB;AAA1C,gBADF,EAEE,KAAC,GAAD,CAAK,MAAL;AAAY,gBAAA,IAAI,EAAC,UAAjB;AAA4B,gBAAA,SAAS,EAAEuB;AAAvC,gBAFF,EAGE,KAAC,GAAD,CAAK,MAAL;AAAY,gBAAA,IAAI,EAAC,KAAjB;AAAuB,gBAAA,SAAS,EAAEC;AAAlC,gBAHF;AAAA;AADF;AADF;AADF;AADF,MADF,EAcE,KAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB,MAdF;AAAA,IADF;AAkBD","sourcesContent":["import { StatusBar as ExpoStatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Text } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurants.screen\";\nimport { theme } from \"./src/infrastructure/theme\";\nimport { SafeArea } from \"./src/components/utility/safe-area.component\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport {\n  useFonts as useOswald,\n  Oswald_400Regular,\n} from \"@expo-google-fonts/oswald\";\nimport { useFonts as useLato, Lato_400Regular } from \"@expo-google-fonts/lato\";\nimport { RestaurantsContextProvider } from \"./src/services/restaurants/restaurants.context\";\nimport { LocationContextProvider } from \"./src/services/location/location.context\";\n\nconst Tab = createBottomTabNavigator();\n\nconst TAB_ICON = {\n  Restaurants: \"md-restaurant\",\n  Map: \"md-map\",\n  Settings: \"md-settings\",\n};\n\nconst createScreenOptions = ({ route }) => {\n  const iconName = TAB_ICON[route.name];\n  return {\n    tabBarIcon: ({ size, color }) => (\n      <Ionicons name={iconName} size={size} color={color} />\n    ),\n  };\n};\n\nconst SettingsScreen = () => (\n  <SafeArea>\n    <Text>Settings</Text>\n  </SafeArea>\n);\nconst MapScreen = () => (\n  <SafeArea>\n    <Text>Map</Text>\n  </SafeArea>\n);\n\nexport default function App() {\n  const [oswaldLoaded] = useOswald({\n    Oswald_400Regular,\n  });\n\n  const [latoLoaded] = useLato({\n    Lato_400Regular,\n  });\n\n  if (!oswaldLoaded || !latoLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <LocationContextProvider>\n          <RestaurantsContextProvider>\n            <NavigationContainer>\n              <Tab.Navigator screenOptions={createScreenOptions}>\n                <Tab.Screen name=\"Restaurants\" component={RestaurantsScreen} />\n                <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n                <Tab.Screen name=\"Map\" component={MapScreen} />\n              </Tab.Navigator>\n            </NavigationContainer>\n          </RestaurantsContextProvider>\n        </LocationContextProvider>\n      </ThemeProvider>\n      <ExpoStatusBar style=\"auto\" />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}