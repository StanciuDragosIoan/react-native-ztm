{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, createContext, useEffect, useMemo } from \"react\";\nimport { restaurantsRequest, restaurantsTransform } from \"./mock/restaurants.service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var RestaurantsContext = createContext();\nexport var RestaurantsContextProvider = function RestaurantsContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurants = _useState2[0],\n      setRestaurants = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var retrieveRestaurants = function retrieveRestaurants() {\n    setIsLoading(true);\n    setTimeout(function () {\n      restaurantsRequest().then(restaurantsTransform).then(function (res) {\n        setIsLoading(false);\n        setRestaurants(res);\n      }).catch(function (err) {\n        setIsLoading(false);\n        setError(err);\n      });\n    }, 2000);\n  };\n\n  useEffect(function () {\n    retrieveRestaurants();\n  }, []);\n  return _jsx(RestaurantsContext.Provider, {\n    value: {\n      restaurants: restaurants,\n      isLoading: isLoading,\n      error: error\n    },\n    children: children\n  });\n};","map":{"version":3,"sources":["/home/amaimon/work/udemy_courses/react_native_ztm/mealsToGo/src/services/restaurants/restaurants.context.js"],"names":["React","useState","createContext","useEffect","useMemo","restaurantsRequest","restaurantsTransform","RestaurantsContext","RestaurantsContextProvider","children","restaurants","setRestaurants","isLoading","setIsLoading","error","setError","retrieveRestaurants","setTimeout","then","res","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,OAApD,QAAmE,OAAnE;AACA,SACEC,kBADF,EAEEC,oBAFF;;AAKA,OAAO,IAAMC,kBAAkB,GAAGL,aAAa,EAAxC;AAEP,OAAO,IAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC1D,kBAAsCR,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAkCV,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0BZ,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,UAAU,CAAC,YAAM;AACfZ,MAAAA,kBAAkB,GACfa,IADH,CACQZ,oBADR,EAEGY,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,cAAc,CAACQ,GAAD,CAAd;AACD,OALH,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS;AACdR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACM,GAAD,CAAR;AACD,OATH;AAUD,KAXS,EAWP,IAXO,CAAV;AAYD,GAdD;;AAgBAlB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,KAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEN,MAAAA,WAAW,EAAXA,WAAF;AAAeE,MAAAA,SAAS,EAATA,SAAf;AAA0BE,MAAAA,KAAK,EAALA;AAA1B,KAApC;AAAA,cACGL;AADH,IADF;AAKD,CA9BM","sourcesContent":["import React, { useState, createContext, useEffect, useMemo } from \"react\";\nimport {\n  restaurantsRequest,\n  restaurantsTransform,\n} from \"./mock/restaurants.service\";\n\nexport const RestaurantsContext = createContext();\n\nexport const RestaurantsContextProvider = ({ children }) => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const retrieveRestaurants = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      restaurantsRequest()\n        .then(restaurantsTransform)\n        .then((res) => {\n          setIsLoading(false);\n          setRestaurants(res);\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          setError(err);\n        });\n    }, 2000);\n  };\n\n  useEffect(() => {\n    retrieveRestaurants();\n  }, []);\n\n  return (\n    <RestaurantsContext.Provider value={{ restaurants, isLoading, error }}>\n      {children}\n    </RestaurantsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}