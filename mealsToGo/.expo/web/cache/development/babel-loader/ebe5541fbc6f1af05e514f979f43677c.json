{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport React, { useContext } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { RestaurantsContext } from \"../../../services/restaurants/restaurants.context\";\nimport styled from \"styled-components/native\";\nimport { Search } from \"../components/search.component\";\nimport { RestaurantInfoCard } from \"../components/restaurant-info-card.component\";\nimport { Spacer } from \"../../../components/spacer/spacer.component\";\nimport { SafeArea } from \"../../../components/utility/safe-area.component\";\nimport { ActivityIndicator, Colors } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RestaurantList = styled(FlatList).attrs({\n  contentContainerStyle: {\n    padding: 16\n  }\n})(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\"])));\nvar Loading = styled(ActivityIndicator)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-left: -25px;\\n\"])));\nvar LoadingContainer = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n\"])));\nexport var RestaurantsScreen = function RestaurantsScreen() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var _useContext = useContext(RestaurantsContext),\n      isLoading = _useContext.isLoading,\n      error = _useContext.error,\n      restaurants = _useContext.restaurants;\n\n  return _jsxs(SafeArea, {\n    children: [isLoading && _jsx(LoadingContainer, {\n      children: _jsx(Loading, {\n        size: 50,\n        animating: true,\n        color: Colors.blue300\n      })\n    }), _jsx(Search, {}), _jsx(RestaurantList, {\n      data: restaurants,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Spacer, {\n          position: \"bottom\",\n          size: \"large\",\n          children: _jsx(RestaurantInfoCard, {\n            restaurant: item\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      },\n      contentContainerStyle: {\n        padding: 16,\n        marginTop: 16\n      }\n    })]\n  });\n};","map":{"version":3,"sources":["/home/amaimon/work/udemy_courses/react_native_ztm/mealsToGo/src/features/restaurants/screens/restaurants.screen.js"],"names":["React","useContext","RestaurantsContext","styled","Search","RestaurantInfoCard","Spacer","SafeArea","ActivityIndicator","Colors","RestaurantList","FlatList","attrs","contentContainerStyle","padding","Loading","LoadingContainer","View","RestaurantsScreen","useState","searchQuery","setSearchQuery","onChangeSearch","query","isLoading","error","restaurants","blue300","item","name","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,SAASC,kBAAT;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT;AACA,SAASC,kBAAT;AACA,SAASC,MAAT;AACA,SAASC,QAAT;AACA,SAASC,iBAAT,EAA4BC,MAA5B,QAA0C,oBAA1C;;;AAEA,IAAMC,cAAc,GAAGP,MAAM,CAACQ,QAAD,CAAN,CAAiBC,KAAjB,CAAuB;AAC5CC,EAAAA,qBAAqB,EAAE;AACrBC,IAAAA,OAAO,EAAE;AADY;AADqB,CAAvB,CAAH,0EAApB;AAMA,IAAMC,OAAO,GAAGZ,MAAM,CAACK,iBAAD,CAAT,qGAAb;AAGA,IAAMQ,gBAAgB,GAAGb,MAAM,CAACc,IAAV,gIAAtB;AAKA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,wBAAsClB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,WAAWF,cAAc,CAACE,KAAD,CAAzB;AAAA,GAAvB;;AAEA,oBAA0CtB,UAAU,CAACC,kBAAD,CAApD;AAAA,MAAQsB,SAAR,eAAQA,SAAR;AAAA,MAAmBC,KAAnB,eAAmBA,KAAnB;AAAA,MAA0BC,WAA1B,eAA0BA,WAA1B;;AAEA,SACE,MAAC,QAAD;AAAA,eACGF,SAAS,IACR,KAAC,gBAAD;AAAA,gBACE,KAAC,OAAD;AAAS,QAAA,IAAI,EAAE,EAAf;AAAmB,QAAA,SAAS,EAAE,IAA9B;AAAoC,QAAA,KAAK,EAAEf,MAAM,CAACkB;AAAlD;AADF,MAFJ,EAME,KAAC,MAAD,KANF,EAOE,KAAC,cAAD;AACE,MAAA,IAAI,EAAED,WADR;AAEE,MAAA,UAAU,EAAE,0BAAc;AAAA,YAAXE,IAAW,QAAXA,IAAW;AACxB,eACE,KAAC,MAAD;AAAQ,UAAA,QAAQ,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAA,oBACE,KAAC,kBAAD;AAAoB,YAAA,UAAU,EAAEA;AAAhC;AADF,UADF;AAKD,OARH;AASE,MAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,eAAUA,IAAI,CAACC,IAAf;AAAA,OAThB;AAUE,MAAA,qBAAqB,EAAE;AAAEf,QAAAA,OAAO,EAAE,EAAX;AAAegB,QAAAA,SAAS,EAAE;AAA1B;AAVzB,MAPF;AAAA,IADF;AAsBD,CA7BM","sourcesContent":["import React, { useContext } from \"react\";\nimport { FlatList } from \"react-native\";\nimport { RestaurantsContext } from \"../../../services/restaurants/restaurants.context\";\nimport styled from \"styled-components/native\";\nimport { Search } from \"../components/search.component\";\nimport { RestaurantInfoCard } from \"../components/restaurant-info-card.component\";\nimport { Spacer } from \"../../../components/spacer/spacer.component\";\nimport { SafeArea } from \"../../../components/utility/safe-area.component\";\nimport { ActivityIndicator, Colors } from \"react-native-paper\";\n\nconst RestaurantList = styled(FlatList).attrs({\n  contentContainerStyle: {\n    padding: 16,\n  },\n})``;\n\nconst Loading = styled(ActivityIndicator)`\n  margin-left: -25px;\n`;\nconst LoadingContainer = styled.View`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\nexport const RestaurantsScreen = () => {\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n\n  const onChangeSearch = (query) => setSearchQuery(query);\n\n  const { isLoading, error, restaurants } = useContext(RestaurantsContext);\n\n  return (\n    <SafeArea>\n      {isLoading && (\n        <LoadingContainer>\n          <Loading size={50} animating={true} color={Colors.blue300} />\n        </LoadingContainer>\n      )}\n      <Search />\n      <RestaurantList\n        data={restaurants}\n        renderItem={({ item }) => {\n          return (\n            <Spacer position=\"bottom\" size=\"large\">\n              <RestaurantInfoCard restaurant={item} />\n            </Spacer>\n          );\n        }}\n        keyExtractor={(item) => item.name}\n        contentContainerStyle={{ padding: 16, marginTop: 16 }}\n      />\n    </SafeArea>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}