{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport styled from \"styled-components/native\";\n\nvar defaultTextStyles = function defaultTextStyles(theme) {\n  return \"\\n  font-family: \" + theme.fonts.body + \";\\n  font-weight: \" + theme.fontWeights.regular + \";\\n  color: \" + theme.colors.text.primary + \";\\n  flex-wrap: wrap;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n\";\n};\n\nvar body = function body(theme) {\n  return \"\\n    font-size: \" + theme.fontSizes.body + \";\\n\";\n};\n\nvar hint = function hint(theme) {\n  return \"\\n    font-size: \" + theme.fontSizes.body + \";\\n\";\n};\n\nvar error = function error(theme) {\n  return \"\\n    color: \" + theme.colors.text.error + \";\\n\";\n};\n\nvar caption = function caption(theme) {\n  return \"\\n    font-size: \" + theme.fontSizes.caption + \";\\n    font-weight: \" + theme.fontWeights.bold + \";\\n\";\n};\n\nvar label = function label(theme) {\n  return \"\\n    font-family: \" + theme.fonts.heading + \";\\n    font-size: \" + theme.fontSizes.body + \";\\n    font-weight: \" + theme.fontWeights.medium + \";\\n\";\n};\n\nvar variants = {\n  body: body,\n  label: label,\n  caption: caption,\n  error: error,\n  hint: hint\n};\nexport var Text = styled.Text(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  \", \"\\n  \", \"\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return defaultTextStyles(theme);\n}, function (_ref2) {\n  var variant = _ref2.variant,\n      theme = _ref2.theme;\n  return variants[variant](theme);\n});\nText.defaultProps = {\n  variant: \"body\"\n};","map":{"version":3,"sources":["/home/amaimon/work/udemy_courses/react_native_ztm/mealsToGo/src/components/typography/text.component.js"],"names":["styled","defaultTextStyles","theme","fonts","body","fontWeights","regular","colors","text","primary","fontSizes","hint","error","caption","bold","label","heading","medium","variants","Text","variant","defaultProps"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,+BACTA,KAAK,CAACC,KAAN,CAAYC,IADH,0BAETF,KAAK,CAACG,WAAN,CAAkBC,OAFT,oBAGfJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkBC,OAHH;AAAA,CAA1B;;AASA,IAAML,IAAI,GAAG,SAAPA,IAAO,CAACF,KAAD;AAAA,+BACIA,KAAK,CAACQ,SAAN,CAAgBN,IADpB;AAAA,CAAb;;AAIA,IAAMO,IAAI,GAAG,SAAPA,IAAO,CAACT,KAAD;AAAA,+BACIA,KAAK,CAACQ,SAAN,CAAgBN,IADpB;AAAA,CAAb;;AAIA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,CAACV,KAAD;AAAA,2BACDA,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkBI,KADjB;AAAA,CAAd;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACX,KAAD;AAAA,+BACCA,KAAK,CAACQ,SAAN,CAAgBG,OADjB,4BAEGX,KAAK,CAACG,WAAN,CAAkBS,IAFrB;AAAA,CAAhB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACb,KAAD;AAAA,iCACKA,KAAK,CAACC,KAAN,CAAYa,OADjB,0BAEGd,KAAK,CAACQ,SAAN,CAAgBN,IAFnB,4BAGKF,KAAK,CAACG,WAAN,CAAkBY,MAHvB;AAAA,CAAd;;AAMA,IAAMC,QAAQ,GAAG;AACfd,EAAAA,IAAI,EAAJA,IADe;AAEfW,EAAAA,KAAK,EAALA,KAFe;AAGfF,EAAAA,OAAO,EAAPA,OAHe;AAIfD,EAAAA,KAAK,EAALA,KAJe;AAKfD,EAAAA,IAAI,EAAJA;AALe,CAAjB;AAQA,OAAO,IAAMQ,IAAI,GAAGnB,MAAM,CAACmB,IAAV,6FACb;AAAA,MAAGjB,KAAH,QAAGA,KAAH;AAAA,SAAeD,iBAAiB,CAACC,KAAD,CAAhC;AAAA,CADa,EAEb;AAAA,MAAGkB,OAAH,SAAGA,OAAH;AAAA,MAAYlB,KAAZ,SAAYA,KAAZ;AAAA,SAAwBgB,QAAQ,CAACE,OAAD,CAAR,CAAkBlB,KAAlB,CAAxB;AAAA,CAFa,CAAV;AAKPiB,IAAI,CAACE,YAAL,GAAoB;AAClBD,EAAAA,OAAO,EAAE;AADS,CAApB","sourcesContent":["import styled from \"styled-components/native\";\n\nconst defaultTextStyles = (theme) => `\n  font-family: ${theme.fonts.body};\n  font-weight: ${theme.fontWeights.regular};\n  color: ${theme.colors.text.primary};\n  flex-wrap: wrap;\n  margin-top: 0px;\n  margin-bottom: 0px;\n`;\n\nconst body = (theme) => `\n    font-size: ${theme.fontSizes.body};\n`;\n\nconst hint = (theme) => `\n    font-size: ${theme.fontSizes.body};\n`;\n\nconst error = (theme) => `\n    color: ${theme.colors.text.error};\n`;\n\nconst caption = (theme) => `\n    font-size: ${theme.fontSizes.caption};\n    font-weight: ${theme.fontWeights.bold};\n`;\n\nconst label = (theme) => `\n    font-family: ${theme.fonts.heading};\n    font-size: ${theme.fontSizes.body};\n    font-weight: ${theme.fontWeights.medium};\n`;\n\nconst variants = {\n  body,\n  label,\n  caption,\n  error,\n  hint,\n};\n\nexport const Text = styled.Text`\n  ${({ theme }) => defaultTextStyles(theme)}\n  ${({ variant, theme }) => variants[variant](theme)}\n`;\n\nText.defaultProps = {\n  variant: \"body\",\n};\n"]},"metadata":{},"sourceType":"module"}