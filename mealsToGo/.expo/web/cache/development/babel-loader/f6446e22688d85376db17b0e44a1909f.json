{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mocks, mockImages } from \"./index\";\nimport camelize from \"camelize\";\nexport var restaurantsRequest = function restaurantsRequest() {\n  var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"37.7749295,-122.4194155\";\n  return new Promise(function (resolve, reject) {\n    var mock = mocks[location];\n\n    if (!mock) {\n      reject(\"not found\");\n    }\n\n    resolve(mock);\n  });\n};\nexport var restaurantsTransform = function restaurantsTransform(_ref) {\n  var _ref$results = _ref.results,\n      results = _ref$results === void 0 ? [] : _ref$results;\n  var mappedResults = results.map(function (restaurant) {\n    restaurant.photos = restaurant.photos.map(function (p) {\n      return mockImages[Math.ceil(Math.random() * (mockImages.length - 1))];\n    });\n    return _objectSpread(_objectSpread({}, restaurant), {}, {\n      isOpenNow: restaurant.opening_hours && restaurant.opening_hours.open_now,\n      isClosedTemporarily: restaurant.business_status === \"CLOSED_TEMPORARILY\"\n    });\n  });\n  return camelize(mappedResults);\n};","map":{"version":3,"sources":["/home/amaimon/work/udemy_courses/react_native_ztm/mealsToGo/src/services/restaurants/mock/restaurants.service.js"],"names":["mocks","mockImages","camelize","restaurantsRequest","location","Promise","resolve","reject","mock","restaurantsTransform","results","mappedResults","map","restaurant","photos","p","Math","ceil","random","length","isOpenNow","opening_hours","open_now","isClosedTemporarily","business_status"],"mappings":";;;;;;AAAA,SAASA,KAAT,EAAgBC,UAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAA0C;AAAA,MAAzCC,QAAyC,uEAA9B,yBAA8B;AAC1E,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,IAAI,GAAGR,KAAK,CAACI,QAAD,CAAlB;;AACA,QAAI,CAACI,IAAL,EAAW;AACTD,MAAAA,MAAM,CAAC,WAAD,CAAN;AACD;;AACDD,IAAAA,OAAO,CAACE,IAAD,CAAP;AACD,GANM,CAAP;AAOD,CARM;AAUP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAsB;AAAA,0BAAnBC,OAAmB;AAAA,MAAnBA,OAAmB,6BAAT,EAAS;AACxD,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAACC,UAAD,EAAgB;AAChDA,IAAAA,UAAU,CAACC,MAAX,GAAoBD,UAAU,CAACC,MAAX,CAAkBF,GAAlB,CAAsB,UAACG,CAAD,EAAO;AAC/C,aAAOd,UAAU,CAACe,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,MAAiBjB,UAAU,CAACkB,MAAX,GAAoB,CAArC,CAAV,CAAD,CAAjB;AACD,KAFmB,CAApB;AAGA,2CACKN,UADL;AAEEO,MAAAA,SAAS,EAAEP,UAAU,CAACQ,aAAX,IAA4BR,UAAU,CAACQ,aAAX,CAAyBC,QAFlE;AAGEC,MAAAA,mBAAmB,EAAEV,UAAU,CAACW,eAAX,KAA+B;AAHtD;AAKD,GATqB,CAAtB;AAUA,SAAOtB,QAAQ,CAACS,aAAD,CAAf;AACD,CAZM","sourcesContent":["import { mocks, mockImages } from \"./index\";\nimport camelize from \"camelize\";\n\nexport const restaurantsRequest = (location = \"37.7749295,-122.4194155\") => {\n  return new Promise((resolve, reject) => {\n    const mock = mocks[location];\n    if (!mock) {\n      reject(\"not found\");\n    }\n    resolve(mock);\n  });\n};\n\nexport const restaurantsTransform = ({ results = [] }) => {\n  const mappedResults = results.map((restaurant) => {\n    restaurant.photos = restaurant.photos.map((p) => {\n      return mockImages[Math.ceil(Math.random() * (mockImages.length - 1))];\n    });\n    return {\n      ...restaurant,\n      isOpenNow: restaurant.opening_hours && restaurant.opening_hours.open_now,\n      isClosedTemporarily: restaurant.business_status === \"CLOSED_TEMPORARILY\",\n    };\n  });\n  return camelize(mappedResults);\n};\n"]},"metadata":{},"sourceType":"module"}